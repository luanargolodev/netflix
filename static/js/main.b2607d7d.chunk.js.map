{"version":3,"sources":["tmdb.js","components/MovieRow.js","components/FeaturedMovie.js","components/Header.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listW","results","length","marginLeft","width","map","item","key","src","poster_path","alt","original_title","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substring","class","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","href","id","join","black","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","useEffect","Tmdb","list","originals","filter","randomChosen","floor","random","chosen","chosenInfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","role","aria-label","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2607d7d.chunk.js","sourcesContent":["const API_KEY = '87533c310d3e816e461feca9a728b65f';\nconst API_BASE = 'https://api.themoviedb.org/3';\n\nconst basicFetch = async (endpoint) => {\n  const req = await fetch(`${API_BASE}${endpoint}`);\n  const json = await req.json();\n  return json;\n}\n\nexport default {\n  getHomeList: async () => {\n    return [\n      {\n        slug: 'originals',\n        title: 'Originais do Netflix',\n        items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'trending',\n        title: 'Recomendados para você',\n        items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'toprated',\n        title: 'Em alta',\n        items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'action',\n        title: 'Ação',\n        items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'comedy',\n        title: 'Comédia',\n        items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'horror',\n        title: 'Terror',\n        items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'romance',\n        title: 'Romance',\n        items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'documentary',\n        title: 'Documentários',\n        items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\n      },\n    ];\n  },\n  getMovieInfo: async (movieId, type) => {\n    let info = {};\n\n    if(movieId) {\n      switch(type) {\n        case 'movie':\n          info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`)\n        break;\n        case 'tv':\n          info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`)\n        break;\n        default:\n          info = null;\n        break;\n      }\n    }\n\n    return info;\n  }\n}","import React, { useState } from 'react';\nimport './MovieRow.css';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nexport default ({title, items}) => {\n  const [scrollX, setScrollX] = useState(0);\n\n  const handleLeftArrow = () => {\n    let x = scrollX + Math.round(window.innerWidth / 2);\n    if(x > 0) {\n      x = 0;\n    }\n    setScrollX(x);\n  }\n\n  const handleRightArrow = () => {\n    let x = scrollX - Math.round(window.innerWidth / 2);\n    let listW = items.results.length * 150;\n    if((window.innerWidth - listW) > x) {\n      x = (window.innerWidth - listW) - 60;\n    }\n    setScrollX(x);\n  }\n  \n  return(\n    <div className=\"movieRow\">\n      <h2>{title}</h2>\n      <div className=\"movieRow--left\" onClick={handleLeftArrow}>\n        <NavigateBeforeIcon style={{fontSize: 50}} />\n      </div>\n      <div className=\"movieRow--right\" onClick={handleRightArrow}>\n        <NavigateNextIcon style={{fontSize: 50}} />\n      </div>\n      <div className=\"movieRow--listarea\">\n        <div className=\"movieRow--list\" style={{\n          marginLeft: scrollX,\n          width: items.results.length * 150\n        }}>\n          {items.results.length > 0 && items.results.map((item, key) => (\n            <div key={key} className=\"movieRow--item\">\n              <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport './FeaturedMovie.css';\n\nexport default ({item}) => {\n\n  let firstDate = new Date(item.first_air_date);\n  let genres = [];\n  for(let i in item.genres) {\n    genres.push(item.genres[i].name);\n  }\n  \n  let description = item.overview;\n  if(description.length > 200) {\n    description = description.substring(0, 200) + '...'\n  }\n\n\n  return(\n    <section class=\"featured\" style={{\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n    }}>\n    <div className=\"featured--vertical\">\n      <div className=\"featured--horizontal\">\n        <div className=\"featured--name\">{item.original_name}</div>\n        <div className=\"featured--info\">\n          <div className=\"featured--points\">{item.vote_average} pontos</div>\n          <div className=\"featured--year\">{firstDate.getFullYear()}</div>\n          <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\n        </div>\n        <div className=\"featured--description\">{description}</div>\n        <div className=\"featured--buttons\">\n          <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">► Assistir</a>\n          <a href={`/list/add/${item.id}`} className=\"featured--mylistbutton\">+ Minha Lista</a>\n        </div>\n        <div className=\"featured--genres\">\n          <strong>Gêneros:</strong> {genres.join(', ')}\n        </div>\n      </div>\n    </div>\n    </section>\n  );\n}","import React from 'react';\nimport './Header.css';\n\nexport default ({black}) => {\n  return(\n    <header className={black ? 'black': ''}>\n      <div className=\"header--logo\">\n        <a href=\"/\">\n          <img src=\"https://upload.wikimedia.org/wikipedia/commons/7/7a/Logonetflix.png\" alt=\"Netflix\" />\n        </a>\n      </div>\n      <div className=\"header--user\">\n        <a href=\"/\">\n          <img src=\"https://www.demsoc.org/uploads/store/mediaupload/20/image/square_400-DS_Avatar_Emoji_1.png\" alt=\"Perfil\" />\n        </a>\n      </div>\n    </header>\n  );\n}","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Tmdb from \"./tmdb\";\nimport MovieRow from \"./components/MovieRow\";\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from \"./components/Header\";\n\nexport default () => {\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      // Pegando a lista total\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      // Pegando o filme em destaque\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n    };\n\n    loadAll();\n  }, []);\n\n  useEffect(() => {\n    const scrollListener = () => {\n      if(window.scrollY > 10) {\n        setBlackHeader(true);\n      } else {\n        setBlackHeader(false);\n      }\n    }\n    window.addEventListener('scroll', scrollListener);\n\n    return() => {\n      window.removeEventListener('scroll', scrollListener);\n    }\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <Header black={blackHeader}/>\n\n      {featuredData && \n        <FeaturedMovie item={featuredData}/>\n      }\n      <section className=\"lists\">\n        {movieList.map((item, key) => (\n          <MovieRow key={key} title={item.title} items={item.items} />\n        ))}\n      </section>\n      <footer>\n        Feito com <span role=\"img\" aria-label=\"heart\">❤️</span>por Luan Argolo <br/>\n        Direitos de imagem para Netflix <br/>\n        Dados pegos do site Themoviedb.org\n      </footer>\n\n      {movieList.length <= 0 && \n        <div className=\"loading\">\n          <img src=\"https://media.filmelier.com/noticias/br/2020/03/Netflix_LoadTime.gif\" alt=\"Carregando\" />\n        </div>\n      }\n\n      \n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}